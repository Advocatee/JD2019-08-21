package by.it.zavadski.jd01_06;


/**
 * TaskB1. Вывести в консоль все слова текста, начинающихся согласной и заканчивающихся
 * гласной буквой (нужно сделать для проверки этого условия приватный метод без regex).
 * 2. TaskB2. Вывести через \n все предложения текста в порядке возрастания количества символов
 * (!) в каждом из них. В предложениях нужно сначала заменить все небуквенные символы и их
 * последовательности на один пробел и выполнить trim() для каждого предложения.
 *
 * Задание С:
 * 1. TaskC1. Отформатировать исходный текст с выравниванием по обоим краям. Для этого
 * добавить дополнительные пробелы между словами, так чтобы ширина строк стала равной, а
 * число пробелов между словами отличалось не более чем на единицу внутри каждой строки,
 * причем на единицу большие последовательности пробелов должны идти с начала строки.
 * 2. TaskC2. Сформировать и вернуть в методе String slow (String text) из случайных слов
 * исходного текста строку String минимум в сто тысяч символов путем конкатенации. Слова
 * должны быть «склеены» через один пробел. Затем:
 * • В методе main: определить время работы метода slow (удобно использовать
 * System.nanoTime() или аналог); вывести полученный текст и время работы метода slow в
 * милисекундах на консоль.
 * • Ускорить процесс с StringBuilder (сделать новый метод String fast (String text),
 * ВАЖНО: его итог должен быть таким как в slow до буквы). В main повторить вывод.
 */
public class TaskB1 {
    public static void main(String[] args) {

    }
}
